<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zzxmh.employeeservice.dao.employee.Base_infoMapper" >
  <resultMap id="BaseResultMap" type="com.zzxmh.employeeservice.domain.employee.Base_info" >
    <id column="USER_ID" property="userId" jdbcType="VARCHAR" />
    <result column="E_NAME" property="eName" jdbcType="VARCHAR" />
    <result column="EMAIL" property="email" jdbcType="VARCHAR" />
    <result column="TEL" property="tel" jdbcType="VARCHAR" />
    <result column="SID" property="sid" jdbcType="VARCHAR" />
    <result column="NATION" property="nation" jdbcType="VARCHAR" />
    <result column="LIVE_CITY" property="liveCity" jdbcType="VARCHAR" />
    <result column="GENDER" property="gender" jdbcType="CHAR" />
    <result column="SAL" property="sal" jdbcType="DOUBLE" />
    <result column="LEVEL_ID" property="levelId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    USER_ID, E_NAME, EMAIL, TEL, SID, NATION, LIVE_CITY, GENDER, SAL, LEVEL_ID
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from base_info
    where USER_ID = #{userId,jdbcType=VARCHAR}
  </select>
  <select id="getAlldatas" resultMap="BaseResultMap" parameterType="java.util.Map">
    select
    <include refid="Base_Column_List" />
    from base_info
    limit #{pageNumber},#{pageSize}
  </select>
  <select id="getfuzzyAlldatas" parameterType="java.util.Map" resultType="java.util.Map">
      SELECT *
        from(
        SELECT b.USER_ID,E_NAME,GENDER,
        (SELECT DEPT_NAME from dept WHERE DEPT_ID IN
        (SELECT DEPT_ID from dept_role WHERE ID IN
        (SELECT DEPT_ROLE_ID from user_dept_role WHERE USER_ID=b.USER_ID))) as DEPT_NAME,
        (SELECT DEPT_LOC from dept WHERE DEPT_ID IN
        (SELECT DEPT_ID from dept_role WHERE ID IN
        (SELECT DEPT_ROLE_ID from user_dept_role WHERE USER_ID=b.USER_ID))) as DEPT_LOC,
        (SELECT ROLE_NAME from role WHERE ROLE_ID IN
        (select ROLE_ID from dept_role WHERE ID IN
        (SELECT DEPT_ROLE_ID from user_dept_role WHERE USER_ID=b.USER_ID)))as ROLE_NAME,
        (SELECT LEVEL_NAME from `level` WHERE LEVEL_ID=b.LEVEL_ID) as LEVEL_NAME
        FROM base_info as b
      ) as c
      WHERE  c.USER_ID LIKE "%"#{searchtext,jdbcType=VARCHAR}"%" OR c.E_NAME LIKE "%"#{searchtext,jdbcType=VARCHAR}"%"
       OR c.GENDER LIKE "%"#{searchtext,jdbcType=VARCHAR}"%" OR c.DEPT_NAME LIKE "%"#{searchtext,jdbcType=VARCHAR}"%"
        OR c.DEPT_LOC LIKE "%"#{searchtext,jdbcType=VARCHAR}"%" OR c.ROLE_NAME LIKE "%"#{searchtext,jdbcType=VARCHAR}"%"
         OR c.LEVEL_NAME LIKE "%"#{searchtext,jdbcType=VARCHAR}"%"
      LIMIT  #{pageNumber},#{pageSize}
  </select>
  <select id="getfuzzyTotal" resultType="java.lang.Integer" parameterType="java.lang.String">
    SELECT count(*) as total
        from(
        SELECT b.USER_ID,E_NAME,GENDER,
        (SELECT DEPT_NAME from dept WHERE DEPT_ID IN
        (SELECT DEPT_ID from dept_role WHERE ID IN
        (SELECT DEPT_ROLE_ID from user_dept_role WHERE USER_ID=b.USER_ID))) as DEPT_NAME,
        (SELECT DEPT_LOC from dept WHERE DEPT_ID IN
        (SELECT DEPT_ID from dept_role WHERE ID IN
        (SELECT DEPT_ROLE_ID from user_dept_role WHERE USER_ID=b.USER_ID))) as DEPT_LOC,
        (SELECT ROLE_NAME from role WHERE ROLE_ID IN
        (select ROLE_ID from dept_role WHERE ID IN
        (SELECT DEPT_ROLE_ID from user_dept_role WHERE USER_ID=b.USER_ID)))as ROLE_NAME,
        (SELECT LEVEL_NAME from `level` WHERE LEVEL_ID=b.LEVEL_ID) as LEVEL_NAME
        FROM base_info as b
      ) as c
      WHERE  c.USER_ID LIKE "%"#{info,jdbcType=VARCHAR}"%" OR c.E_NAME LIKE "%"#{info,jdbcType=VARCHAR}"%"
       OR c.GENDER LIKE "%"#{info,jdbcType=VARCHAR}"%" OR c.DEPT_NAME LIKE "%"#{info,jdbcType=VARCHAR}"%"
        OR c.DEPT_LOC LIKE "%"#{info,jdbcType=VARCHAR}"%" OR c.ROLE_NAME LIKE "%"#{info,jdbcType=VARCHAR}"%"
         OR c.LEVEL_NAME LIKE "%"#{info,jdbcType=VARCHAR}"%"
  </select>
  <select id="getDataByUserID" resultType="java.util.Map" parameterType="java.lang.String">
    SELECT b.USER_ID,E_NAME,GENDER,
    (SELECT DEPT_NAME from dept WHERE DEPT_ID IN
    (SELECT DEPT_ID from dept_role WHERE ID IN
    (SELECT DEPT_ROLE_ID from user_dept_role WHERE USER_ID=b.USER_ID))) as DEPT_NAME,
    (SELECT DEPT_LOC from dept WHERE DEPT_ID IN
    (SELECT DEPT_ID from dept_role WHERE ID IN
    (SELECT DEPT_ROLE_ID from user_dept_role WHERE USER_ID=b.USER_ID))) as DEPT_LOC,
    (SELECT ROLE_NAME from role WHERE ROLE_ID IN
    (select ROLE_ID from dept_role WHERE ID IN
    (SELECT DEPT_ROLE_ID from user_dept_role WHERE USER_ID=b.USER_ID)))as ROLE_NAME,
    (SELECT LEVEL_NAME from `level` WHERE LEVEL_ID=b.LEVEL_ID) as LEVEL_NAME
    FROM base_info as b
    where USER_ID =#{userId,jdbcType=VARCHAR}
  </select>

  <select id="getTotal" resultType="java.lang.Integer">
    select count(USER_ID) as total
    from base_info
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from base_info
    where USER_ID = #{userId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.zzxmh.employeeservice.domain.employee.Base_info" >
    insert into base_info (USER_ID, E_NAME, EMAIL, 
      TEL, SID, NATION, LIVE_CITY, 
      GENDER, SAL, LEVEL_ID)
    values (#{userId,jdbcType=VARCHAR}, #{eName,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{tel,jdbcType=VARCHAR}, #{sid,jdbcType=VARCHAR}, #{nation,jdbcType=VARCHAR}, #{liveCity,jdbcType=VARCHAR}, 
      #{gender,jdbcType=CHAR}, #{sal,jdbcType=DOUBLE}, #{levelId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zzxmh.employeeservice.domain.employee.Base_info" >
    insert into base_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="eName != null" >
        E_NAME,
      </if>
      <if test="email != null" >
        EMAIL,
      </if>
      <if test="tel != null" >
        TEL,
      </if>
      <if test="sid != null" >
        SID,
      </if>
      <if test="nation != null" >
        NATION,
      </if>
      <if test="liveCity != null" >
        LIVE_CITY,
      </if>
      <if test="gender != null" >
        GENDER,
      </if>
      <if test="sal != null" >
        SAL,
      </if>
      <if test="levelId != null" >
        LEVEL_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="eName != null" >
        #{eName,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="sid != null" >
        #{sid,jdbcType=VARCHAR},
      </if>
      <if test="nation != null" >
        #{nation,jdbcType=VARCHAR},
      </if>
      <if test="liveCity != null" >
        #{liveCity,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=CHAR},
      </if>
      <if test="sal != null" >
        #{sal,jdbcType=DOUBLE},
      </if>
      <if test="levelId != null" >
        #{levelId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zzxmh.employeeservice.domain.employee.Base_info" >
    update base_info
    <set >
      <if test="eName != null" >
        E_NAME = #{eName,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        TEL = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="sid != null" >
        SID = #{sid,jdbcType=VARCHAR},
      </if>
      <if test="nation != null" >
        NATION = #{nation,jdbcType=VARCHAR},
      </if>
      <if test="liveCity != null" >
        LIVE_CITY = #{liveCity,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        GENDER = #{gender,jdbcType=CHAR},
      </if>
      <if test="sal != null" >
        SAL = #{sal,jdbcType=DOUBLE},
      </if>
      <if test="levelId != null" >
        LEVEL_ID = #{levelId,jdbcType=INTEGER},
      </if>
    </set>
    where USER_ID = #{userId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zzxmh.employeeservice.domain.employee.Base_info" >
    update base_info
    set E_NAME = #{eName,jdbcType=VARCHAR},
      EMAIL = #{email,jdbcType=VARCHAR},
      TEL = #{tel,jdbcType=VARCHAR},
      SID = #{sid,jdbcType=VARCHAR},
      NATION = #{nation,jdbcType=VARCHAR},
      LIVE_CITY = #{liveCity,jdbcType=VARCHAR},
      GENDER = #{gender,jdbcType=CHAR},
      SAL = #{sal,jdbcType=DOUBLE},
      LEVEL_ID = #{levelId,jdbcType=INTEGER}
    where USER_ID = #{userId,jdbcType=VARCHAR}
  </update>
</mapper>