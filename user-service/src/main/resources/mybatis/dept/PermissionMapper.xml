<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zzxmh.userservice.dao.dept.PermissionMapper" >
  <resultMap id="BaseResultMap" type="com.zzxmh.userservice.domain.dept.Permission" >
    <id column="PERMISSION_ID" property="permissionId" jdbcType="INTEGER" />
    <result column="PERMISSION_NAME" property="permissionName" jdbcType="VARCHAR" />
    <result column="STATE" property="state" jdbcType="CHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.zzxmh.userservice.domain.dept.Permission" extends="BaseResultMap" >
    <result column="PERMISSION_FUNCTION" property="permissionFunction" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    PERMISSION_ID, PERMISSION_NAME, STATE
  </sql>
  <sql id="Blob_Column_List" >
    PERMISSION_FUNCTION
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from permission
    where PERMISSION_ID = #{permissionId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from permission
    where PERMISSION_ID = #{permissionId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zzxmh.userservice.domain.dept.Permission" >
    insert into permission (PERMISSION_ID, PERMISSION_NAME, STATE, 
      PERMISSION_FUNCTION)
    values (#{permissionId,jdbcType=INTEGER}, #{permissionName,jdbcType=VARCHAR}, #{state,jdbcType=CHAR}, 
      #{permissionFunction,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zzxmh.userservice.domain.dept.Permission" >
    insert into permission
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="permissionId != null" >
        PERMISSION_ID,
      </if>
      <if test="permissionName != null" >
        PERMISSION_NAME,
      </if>
      <if test="state != null" >
        STATE,
      </if>
      <if test="permissionFunction != null" >
        PERMISSION_FUNCTION,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="permissionId != null" >
        #{permissionId,jdbcType=INTEGER},
      </if>
      <if test="permissionName != null" >
        #{permissionName,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=CHAR},
      </if>
      <if test="permissionFunction != null" >
        #{permissionFunction,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zzxmh.userservice.domain.dept.Permission" >
    update permission
    <set >
      <if test="permissionName != null" >
        PERMISSION_NAME = #{permissionName,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        STATE = #{state,jdbcType=CHAR},
      </if>
      <if test="permissionFunction != null" >
        PERMISSION_FUNCTION = #{permissionFunction,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where PERMISSION_ID = #{permissionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zzxmh.userservice.domain.dept.Permission" >
    update permission
    set PERMISSION_NAME = #{permissionName,jdbcType=VARCHAR},
      STATE = #{state,jdbcType=CHAR},
      PERMISSION_FUNCTION = #{permissionFunction,jdbcType=LONGVARCHAR}
    where PERMISSION_ID = #{permissionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zzxmh.userservice.domain.dept.Permission" >
    update permission
    set PERMISSION_NAME = #{permissionName,jdbcType=VARCHAR},
      STATE = #{state,jdbcType=CHAR}
    where PERMISSION_ID = #{permissionId,jdbcType=INTEGER}
  </update>

  <select id="fuzzyselectPermission" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from permission
    where PERMISSION_NAME like "%"#{permissionName,jdbcType=VARCHAR}"%"
  </select>

  <select id="selectByPermissionName" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from permission
    where PERMISSION_NAME = #{permissionName,jdbcType=VARCHAR}
  </select>
</mapper>